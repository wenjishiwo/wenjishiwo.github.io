{"pages":[],"posts":[{"title":"第一天","text":"今天花了一天来弄这个博客，大家都说要想进步，就要有自己的博客，我来学习了！加油！我觉得odoo对我这个博课有巨大的帮助！ tags:","path":"2018/09/23/ddd/"},{"title":"第二篇文章","text":"身为计协的一员，就把 tags:","path":"2018/09/15/duwen/"},{"title":"about me","text":"email:113021075899@163.com qq:11072869850 我用这个博客来记录一点我的东西，毕竟很多东西需要多回顾座右铭:你不是我，怎知我走过的路，心中的苦与乐。","path":"2018/09/13/about-me/"},{"title":"wenji第一个博客","text":"这个主要是一个博客发表内容的主要步骤，以及如何链接到hexo所需的文件 Quick Start创建一个md文件，来添加新的内容1$ hexo new \"My New Post\" 创建后md文件会在hexo文件下的source的_posts里面 更多的功能: Writing 运行自己的hexo-server1$ npm install hexo-server --save Hexo 3.0 把服务器独立成了个别模块，您必须先安装 hexo-server 才能使用1$ hexo server 安装完成后，输入以下命令以启动服务器，您的网站会在 http://localhost:4000 下启动。在服务器启动期间，Hexo 会监视文件变动并自动更新，您无须重启服务器。1$ hexo server -p 5000 如果您想要更改端口，或是在执行时遇到了 EADDRINUSE 错误，可以在执行时使用 -p 选项指定其他端口，如下： 更多的功能: Server 使用Hexo生成静态文件1$ hexo generate 监视文件变动1$ hexo generate --watch Hexo 能够监视文件变动并立即重新生成静态文件，在生成时会比对文件的 SHA1 checksum，只有变动的文件才会写入。完成对文件等内容的修改，进行网页的完成后部署，上传上去您可执行下列的其中一个命令，让 Hexo 在生成完毕后自动部署网站，两个命令的作用是相同的。12$ hexo generate --deploy$ hexo deploy --generate 简写上面两个命令可以简写为12$ hexo g -d$ hexo d -g 也可以分成两步12$ hexo g $ hexo d 更多的功能: Generating 快速部署功能，一条命令就能将网站部署到服务器上1$ hexo deploy 在开始之前，您必须先在 _config.yml 中修改参数，一个正确的部署配置中至少要有 type 参数，例如：12deploy: type: git 更多的功能: Deployment","path":"2018/09/12/hello-world/"}]}